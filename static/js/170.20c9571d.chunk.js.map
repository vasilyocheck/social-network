{"version":3,"file":"static/js/170.20c9571d.chunk.js","mappings":"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","sources":["webpack://my-app-samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://my-app-samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app-samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://my-app-samurai-way/./src/components/common/TextInputForm/TextInputForm.module.css?f515","components/common/TextInputForm/TextInputForm.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__KjZ0Q\",\"largeAvatar\":\"ProfileInfo_largeAvatar__KTgDS\"};","import React, { ChangeEvent } from \"react\";\n\ntype ProfileStatusType = {\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\nexport class ProfileStatus extends React.Component<ProfileStatusType> {\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    console.log(this);\n    this.setState({ editMode: true });\n  };\n  deactivateEditMode = () => {\n    this.setState({ editMode: false });\n    this.props.updateStatus(this.state.status);\n  };\n  onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      status: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    let { status } = this.props;\n    return (\n      <div>\n        {!this.state.editMode ? (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>{status}</span>\n          </div>\n        ) : (\n          <div>\n            <input\n              onChange={this.onStatusChange}\n              value={this.state.status}\n              onBlur={this.deactivateEditMode}\n              autoFocus={true}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { FC } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport { UserProfileType } from \"api/profile-api\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfileStatus } from \"../ProfileStatus/ProfileStatus\";\n\ntype ProfileInfoPropsType = {\n  profile: UserProfileType | null;\n  profileStatus: string;\n  updateStatus: (status: string) => void;\n};\nexport const ProfileInfo: FC<ProfileInfoPropsType> = ({ profile, profileStatus, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      {/*<div>\n                <img src={'https://t3.ftcdn.net/jpg/01/62/85/00/360_F_162850009_lnHxshkJUH36xjM3Ysi8gwAYwUBOaRWB.jpg'} alt={'background'}/>\n            </div>*/}\n      <div className={s.descriptionBlock}>\n        <img src={profile?.photos.large} alt=\"avatar\" className={s.largeAvatar} />\n        <ProfileStatus status={profileStatus} updateStatus={updateStatus} />\n        <div>{profile.fullName}</div>\n        <div>{profile.aboutMe}</div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__8N2xj\",\"posts\":\"MyPosts_posts__VDbQe\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__3H2YQ\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\ntype PostPropsType = {\n  message: string;\n  likeCount: number;\n  id: number;\n};\nexport const Post: React.FC<PostPropsType> = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://img1.goodfon.ru/wallpaper/nbig/f/20/avatar-avatar-neytiri.jpg\" alt=\"avatar\" />\n      {props.message}\n      <div>\n        <span>likes: {props.likeCount}</span>\n      </div>\n      <div>\n        <span>like</span>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, memo } from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport { Post } from \"./Post/Post\";\nimport { PostsType } from \"redux/reducers/profile-reducer\";\nimport { TextInputForm } from \"components/common/TextInputForm/TextInputForm\";\n\ntype MyPostsPropsTypes = {\n  posts: PostsType[];\n  newPostText: string;\n  addPost: (newPostText: string) => void;\n};\n\nexport const MyPosts: FC<MyPostsPropsTypes> = memo(({ posts, newPostText, addPost }) => {\n  const postsElements = posts.map((p) => <Post message={p.postText} likeCount={p.likesCount} id={p.id} key={p.id} />);\n\n  const onAddPost = (newPostText: string) => {\n    addPost(newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <TextInputForm onAddPost={onAddPost} initialPostText={newPostText} />\n      <div>New post</div>\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { MyPosts } from \"./MyPosts\";\nimport { addPostAC } from \"redux/reducers/profile-reducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"app/hooks\";\nimport { getNewPostText, getPosts } from \"utils/utils\";\n\nexport const MyPostsContainer = () => {\n  const dispatch = useDispatch();\n  const posts = useAppSelector(getPosts);\n  const newPostText = useAppSelector(getNewPostText);\n\n  const addPost = (newPostText: string) => {\n    dispatch(addPostAC(newPostText));\n  };\n\n  return <MyPosts addPost={addPost} posts={posts} newPostText={newPostText} />;\n};\n","import React, { FC } from \"react\";\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfo\";\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\nimport { UserProfileType } from \"api/profile-api\";\n\ntype ProfilePropsType = {\n  profile: UserProfileType | null;\n  profileStatus: string;\n  updateStatus: (status: string) => void;\n};\n\nexport const Profile: FC<ProfilePropsType> = (props) => {\n  return (\n    <div className={\"\"}>\n      <ProfileInfo profile={props.profile} profileStatus={props.profileStatus} updateStatus={props.updateStatus} />\n      <MyPostsContainer />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Profile } from \"./Profile\";\nimport { UserProfileType } from \"api/profile-api\";\nimport { setUserProfileTC, updateStatusTC } from \"redux/reducers/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { getAuth, getProfile, getProfileStatus } from \"utils/utils\";\n\ntype ProfileAPIComponentType = {\n  profile: UserProfileType | null;\n  setUserProfile: (userId: number) => void;\n  router: {\n    location: { pathname: string; search: string; hash: string; state: null | string; key: string };\n    navigate: any;\n    params: { userId: string };\n  };\n  isAuth: boolean;\n  profileStatus: string;\n  updateStatus: (status: string) => void;\n};\n\nfunction withRouter(Component: any) {\n  function ComponentWithRouterProp(props: any) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n  return ComponentWithRouterProp;\n}\nexport class ProfileAPIComponent extends React.Component<ProfileAPIComponentType> {\n  componentDidMount() {\n    const userId = Number(this.props.router.params.userId) || 30104;\n    this.props.setUserProfile(userId);\n  }\n\n  render() {\n    return (\n      <Profile\n        profile={this.props.profile}\n        profileStatus={this.props.profileStatus}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nexport const AuthRedirectComponent = (props: any) => {\n  return <ProfileAPIComponent {...props} />;\n};\n\nconst WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\nexport const ProfileContainer = () => {\n  const dispatch = useAppDispatch();\n  const profile = useAppSelector(getProfile);\n  const isAuth = useAppSelector(getAuth);\n  const profileStatus = useAppSelector(getProfileStatus);\n\n  const setUserProfile = (userId: number) => {\n    dispatch(setUserProfileTC(userId));\n  };\n  const updateStatus = (status: string) => {\n    dispatch(updateStatusTC(status));\n  };\n\n  return (\n    <WithUrlDataContainerComponent\n      profile={profile}\n      setUserProfile={setUserProfile}\n      isAuth={isAuth}\n      profileStatus={profileStatus}\n      updateStatus={updateStatus}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"TextInputForm_inputForm__XiL7r\"};","import React, { FC } from \"react\";\nimport { useFormik } from \"formik\";\nimport s from \"./TextInputForm.module.css\";\nimport { validatePost } from \"utils/validators/validators\";\n\ntype NewPostInputFormType = {\n  initialPostText: string;\n  onAddPost: (newPostText: string) => void;\n};\n\nexport type ValuesType = {\n  newText: string;\n};\n\nexport const TextInputForm: FC<NewPostInputFormType> = ({ onAddPost, initialPostText }) => {\n  const formik = useFormik({\n    initialValues: {\n      newText: initialPostText,\n    },\n    validate: (values) => validatePost(values),\n    onSubmit: (values) => {\n      onAddPost(values.newText);\n      formik.handleReset(values.newText);\n    },\n  });\n  const addPostStatus = !!formik.errors.newText;\n  return (\n    <form onSubmit={formik.handleSubmit} className={s.inputForm}>\n      <textarea id=\"newText\" name=\"newText\" onChange={formik.handleChange} value={formik.values.newText} />\n      <button type=\"submit\" disabled={addPostStatus}>\n        add post\n      </button>\n    </form>\n  );\n};\n","import { ValuesType } from \"components/common/TextInputForm/TextInputForm\";\n\ntype ErrorType = {\n  newText?: string;\n};\n\nexport const validatePost = (values: ValuesType) => {\n  const errors: ErrorType = {};\n\n  if (values.newText.length < 1) {\n    errors.newText = \"min message length is 5 bytes\";\n  }\n\n  return errors;\n};\n"],"names":["ProfileStatus","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","editMode","status","props","activateEditMode","console","log","_assertThisInitialized","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","_createClass","key","this","_jsx","children","onChange","onBlur","autoFocus","onDoubleClick","React","ProfileInfo","_ref","profile","profileStatus","_jsxs","className","s","src","photos","large","alt","fullName","aboutMe","Preloader","Post","message","likeCount","MyPosts","memo","posts","newPostText","addPost","postsElements","map","p","postText","likesCount","id","TextInputForm","onAddPost","initialPostText","MyPostsContainer","dispatch","useDispatch","useAppSelector","getPosts","getNewPostText","addPostAC","Profile","Component","ProfileAPIComponent","userId","Number","router","params","setUserProfile","AuthRedirectComponent","_objectSpread","WithUrlDataContainerComponent","location","useLocation","navigate","useNavigate","useParams","ProfileContainer","useAppDispatch","getProfile","isAuth","getAuth","getProfileStatus","setUserProfileTC","updateStatusTC","formik","useFormik","initialValues","newText","validate","values","errors","validatePost","onSubmit","handleReset","addPostStatus","handleSubmit","name","handleChange","type","disabled"],"sourceRoot":""}