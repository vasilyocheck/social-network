{"version":3,"file":"static/js/667.1d7d7e10.chunk.js","mappings":"2MACA,EAA4B,6BAA5B,EAA0E,kCAA1E,EAAqH,0BAArH,EAA0J,4BAA1J,EAAiM,4BAAjM,EAAuO,2B,mBCI1NA,EAAwC,SAACC,GACpD,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAa,IAAMA,EAASC,UAC1CH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAI,cAAgBN,EAAMO,GAAGH,SAAEJ,EAAMQ,QAGpD,ECPaC,EAAkC,SAACT,GAC9C,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAUC,SAAEJ,EAAMU,SAC3C,E,UCMaC,EAA0C,SAAHC,GAAuC,IAAjCC,EAAaD,EAAbC,cAAeC,EAAUF,EAAVE,WACjEC,EAAoBF,EAAcG,UAAUC,KAAI,SAACC,GACrD,OAAOjB,EAAAA,EAAAA,KAACF,EAAY,CAACS,KAAMU,EAAEV,KAAMD,GAAIW,EAAEX,IAASW,EAAEX,GACtD,IAEMY,EAAmBN,EAAcO,SAASH,KAAI,SAACI,GACnD,OAAOpB,EAAAA,EAAAA,KAACQ,EAAO,CAACC,QAASW,EAAEX,QAASH,GAAIc,EAAEd,IAASc,EAAEd,GACvD,IAMA,OACEe,EAAAA,EAAAA,MAAA,OAAKpB,UAAWC,EAAYC,SAAA,EAC1BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,SAAEW,KACnCO,EAAAA,EAAAA,MAAA,OAAKpB,UAAWC,EAAWC,SAAA,CACxBe,GACDlB,EAAAA,EAAAA,KAACsB,EAAAA,EAAa,CAACC,gBAAiBX,EAAcY,WAAYC,UAT3C,SAACD,GACpBX,EAAWW,EACb,SAWF,E,8BC3BaE,EAAqB,WAChC,IAAMC,GAAWC,EAAAA,EAAAA,MACXhB,GAAgBiB,EAAAA,EAAAA,GAAeC,EAAAA,IAMrC,OAAO9B,EAAAA,EAAAA,KAACU,EAAS,CAACE,cAAeA,EAAeC,WAJ7B,SAACW,GAClBG,GAASI,EAAAA,EAAAA,GAAcP,GACzB,GAGF,C,6ECfA,EAA4B,iC,SCafF,EAA0C,SAAHX,GAAwC,IAAlCc,EAASd,EAATc,UAAWF,EAAeZ,EAAfY,gBAC7DS,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,QAASZ,GAEXa,SAAU,SAACC,GAAM,OCbO,SAACA,GAC3B,IAAMC,EAAoB,CAAC,EAM3B,OAJID,EAAOF,QAAQI,OAAS,IAC1BD,EAAOH,QAAU,iCAGZG,CACT,CDK0BE,CAAaH,EAAO,EAC1CI,SAAU,SAACJ,GACTZ,EAAUY,EAAOF,SACjBH,EAAOU,YAAYL,EAAOF,QAC5B,IAEIQ,IAAkBX,EAAOM,OAAOH,QACtC,OACEd,EAAAA,EAAAA,MAAA,QAAMoB,SAAUT,EAAOY,aAAc3C,UAAWC,EAAYC,SAAA,EAC1DH,EAAAA,EAAAA,KAAA,YAAUM,GAAG,UAAUC,KAAK,UAAUsC,SAAUb,EAAOc,aAAcC,MAAOf,EAAOK,OAAOF,WAC1FnC,EAAAA,EAAAA,KAAA,UAAQgD,KAAK,SAASC,SAAUN,EAAcxC,SAAC,eAKrD,C","sources":["webpack://my-app-samurai-way/./src/components/Dialogues/Dialogues.module.css?d141","components/Dialogues/DialogueItem/DialogueItem.tsx","components/Dialogues/Message/Message.tsx","components/Dialogues/Dialogues.tsx","components/Dialogues/DialoguesContainer.tsx","webpack://my-app-samurai-way/./src/components/common/TextInputForm/TextInputForm.module.css?f515","components/common/TextInputForm/TextInputForm.tsx","utils/validators/validators.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogues\":\"Dialogues_dialogues__ppOqo\",\"dialoguesItems\":\"Dialogues_dialoguesItems__JsLIu\",\"active\":\"Dialogues_active__Xux+S\",\"dialogue\":\"Dialogues_dialogue__ql9mR\",\"messages\":\"Dialogues_messages__iM-D7\",\"message\":\"Dialogues_message__aNpYo\"};","import React from \"react\";\nimport s from \"../Dialogues.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { DialoguesType } from \"redux/reducers/dialogues-reducer\";\n\nexport const DialogueItem: React.FC<DialoguesType> = (props) => {\n  return (\n    <div className={s.dialogue + \" \" + s.active}>\n      <NavLink to={\"/dialogues/\" + props.id}>{props.name}</NavLink>\n    </div>\n  );\n};\n","import React from \"react\";\nimport s from \"../Dialogues.module.css\";\nimport { MessagesType } from \"redux/reducers/dialogues-reducer\";\n\nexport const Message: React.FC<MessagesType> = (props) => {\n  return <div className={s.message}>{props.message}</div>;\n};\n","import React from \"react\";\nimport s from \"./Dialogues.module.css\";\nimport { DialogueItem } from \"./DialogueItem/DialogueItem\";\nimport { Message } from \"./Message/Message\";\nimport { DialoguesPageType } from \"redux/reducers/dialogues-reducer\";\nimport { TextInputForm } from \"components/common/TextInputForm/TextInputForm\";\n\ntype DialoguesPropsType = {\n  dialoguesPage: DialoguesPageType;\n  addMessage: (newMessage: string) => void;\n};\n\nexport const Dialogues: React.FC<DialoguesPropsType> = ({ dialoguesPage, addMessage }) => {\n  const dialoguesElements = dialoguesPage.dialogues.map((d) => {\n    return <DialogueItem name={d.name} id={d.id} key={d.id} />;\n  });\n\n  const messagesElements = dialoguesPage.messages.map((m) => {\n    return <Message message={m.message} id={m.id} key={m.id} />;\n  });\n\n  const onAddMessage = (newMessage: string) => {\n    addMessage(newMessage);\n  };\n\n  return (\n    <div className={s.dialogues}>\n      <div className={s.dialoguesItems}>{dialoguesElements}</div>\n      <div className={s.messages}>\n        {messagesElements}\n        <TextInputForm initialPostText={dialoguesPage.newMessage} onAddPost={onAddMessage} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { addNewMessage } from \"redux/reducers/dialogues-reducer\";\nimport { Dialogues } from \"./Dialogues\";\nimport { useDispatch } from \"react-redux\";\nimport { useAppSelector } from \"app/hooks\";\nimport { getDialoguesPage } from \"utils/utils\";\n\nexport const DialoguesContainer = () => {\n  const dispatch = useDispatch();\n  const dialoguesPage = useAppSelector(getDialoguesPage);\n\n  const addMessage = (newMessage: string) => {\n    dispatch(addNewMessage(newMessage));\n  };\n\n  return <Dialogues dialoguesPage={dialoguesPage} addMessage={addMessage} />;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputForm\":\"TextInputForm_inputForm__XiL7r\"};","import React, { FC } from \"react\";\nimport { useFormik } from \"formik\";\nimport s from \"./TextInputForm.module.css\";\nimport { validatePost } from \"utils/validators/validators\";\n\ntype NewPostInputFormType = {\n  initialPostText: string;\n  onAddPost: (newPostText: string) => void;\n};\n\nexport type ValuesType = {\n  newText: string;\n};\n\nexport const TextInputForm: FC<NewPostInputFormType> = ({ onAddPost, initialPostText }) => {\n  const formik = useFormik({\n    initialValues: {\n      newText: initialPostText,\n    },\n    validate: (values) => validatePost(values),\n    onSubmit: (values) => {\n      onAddPost(values.newText);\n      formik.handleReset(values.newText);\n    },\n  });\n  const addPostStatus = !!formik.errors.newText;\n  return (\n    <form onSubmit={formik.handleSubmit} className={s.inputForm}>\n      <textarea id=\"newText\" name=\"newText\" onChange={formik.handleChange} value={formik.values.newText} />\n      <button type=\"submit\" disabled={addPostStatus}>\n        add post\n      </button>\n    </form>\n  );\n};\n","import { ValuesType } from \"components/common/TextInputForm/TextInputForm\";\n\ntype ErrorType = {\n  newText?: string;\n};\n\nexport const validatePost = (values: ValuesType) => {\n  const errors: ErrorType = {};\n\n  if (values.newText.length < 1) {\n    errors.newText = \"min message length is 5 bytes\";\n  }\n\n  return errors;\n};\n"],"names":["DialogueItem","props","_jsx","className","s","children","NavLink","to","id","name","Message","message","Dialogues","_ref","dialoguesPage","addMessage","dialoguesElements","dialogues","map","d","messagesElements","messages","m","_jsxs","TextInputForm","initialPostText","newMessage","onAddPost","DialoguesContainer","dispatch","useDispatch","useAppSelector","getDialoguesPage","addNewMessage","formik","useFormik","initialValues","newText","validate","values","errors","length","validatePost","onSubmit","handleReset","addPostStatus","handleSubmit","onChange","handleChange","value","type","disabled"],"sourceRoot":""}